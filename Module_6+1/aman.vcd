$date
	Sun Mar 23 22:32:45 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tester $end
$var wire 32 ! read_data_2 [31:0] $end
$var wire 32 " read_data_1 [31:0] $end
$var reg 1 # clk $end
$var reg 5 $ dr [4:0] $end
$var reg 1 % reset $end
$var reg 5 & sr1 [4:0] $end
$var reg 5 ' sr2 [4:0] $end
$var reg 1 ( write $end
$var reg 32 ) write_data [31:0] $end
$var integer 32 * k [31:0] $end
$scope module DUT $end
$var wire 1 # clk $end
$var wire 5 + dr [4:0] $end
$var wire 32 , read_data_1 [31:0] $end
$var wire 32 - read_data_2 [31:0] $end
$var wire 1 % reset $end
$var wire 5 . sr1 [4:0] $end
$var wire 5 / sr2 [4:0] $end
$var wire 1 ( write $end
$var wire 32 0 write_data [31:0] $end
$var integer 32 1 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
x(
bx '
bx &
x%
bx $
0#
bx "
bx !
$end
#1
1%
#5
b100000 1
1#
#6
0%
#7
1(
b0 )
b0 0
b0 $
b0 +
b0 *
#10
0#
#15
1#
#17
b1010 )
b1010 0
b1 $
b1 +
b1 *
1(
#20
0#
#25
1#
#27
b10100 )
b10100 0
b10 $
b10 +
b10 *
1(
#30
0#
#35
1#
#37
b11110 )
b11110 0
b11 $
b11 +
b11 *
1(
#40
0#
#45
1#
#47
b101000 )
b101000 0
b100 $
b100 +
b100 *
1(
#50
0#
#55
1#
#57
b110010 )
b110010 0
b101 $
b101 +
b101 *
1(
#60
0#
#65
1#
#67
b111100 )
b111100 0
b110 $
b110 +
b110 *
1(
#70
0#
#75
1#
#77
b1000110 )
b1000110 0
b111 $
b111 +
b111 *
1(
#80
0#
#85
1#
#87
b1010000 )
b1010000 0
b1000 $
b1000 +
b1000 *
1(
#90
0#
#95
1#
#97
b1011010 )
b1011010 0
b1001 $
b1001 +
b1001 *
1(
#100
0#
#105
1#
#107
b1100100 )
b1100100 0
b1010 $
b1010 +
b1010 *
1(
#110
0#
#115
1#
#117
b1101110 )
b1101110 0
b1011 $
b1011 +
b1011 *
1(
#120
0#
#125
1#
#127
b1111000 )
b1111000 0
b1100 $
b1100 +
b1100 *
1(
#130
0#
#135
1#
#137
b10000010 )
b10000010 0
b1101 $
b1101 +
b1101 *
1(
#140
0#
#145
1#
#147
b10001100 )
b10001100 0
b1110 $
b1110 +
b1110 *
1(
#150
0#
#155
1#
#157
b10010110 )
b10010110 0
b1111 $
b1111 +
b1111 *
1(
#160
0#
#165
1#
#167
b10100000 )
b10100000 0
b10000 $
b10000 +
b10000 *
1(
#170
0#
#175
1#
#177
b10101010 )
b10101010 0
b10001 $
b10001 +
b10001 *
1(
#180
0#
#185
1#
#187
b10110100 )
b10110100 0
b10010 $
b10010 +
b10010 *
1(
#190
0#
#195
1#
#197
b10111110 )
b10111110 0
b10011 $
b10011 +
b10011 *
1(
#200
0#
#205
1#
#207
b11001000 )
b11001000 0
b10100 $
b10100 +
b10100 *
1(
#210
0#
#215
1#
#217
b11010010 )
b11010010 0
b10101 $
b10101 +
b10101 *
1(
#220
0#
#225
1#
#227
b11011100 )
b11011100 0
b10110 $
b10110 +
b10110 *
1(
#230
0#
#235
1#
#237
b11100110 )
b11100110 0
b10111 $
b10111 +
b10111 *
1(
#240
0#
#245
1#
#247
b11110000 )
b11110000 0
b11000 $
b11000 +
b11000 *
1(
#250
0#
#255
1#
#257
b11111010 )
b11111010 0
b11001 $
b11001 +
b11001 *
1(
#260
0#
#265
1#
#267
b100000100 )
b100000100 0
b11010 $
b11010 +
b11010 *
1(
#270
0#
#275
1#
#277
b100001110 )
b100001110 0
b11011 $
b11011 +
b11011 *
1(
#280
0#
#285
1#
#287
b100011000 )
b100011000 0
b11100 $
b11100 +
b11100 *
1(
#290
0#
#295
1#
#297
b100100010 )
b100100010 0
b11101 $
b11101 +
b11101 *
1(
#300
0#
#305
1#
#307
b100101100 )
b100101100 0
b11110 $
b11110 +
b11110 *
1(
#310
0#
#315
1#
#317
b100110110 )
b100110110 0
b11111 $
b11111 +
b11111 *
1(
#320
0#
#325
1#
#327
b100000 *
0(
#330
0#
#335
1#
#340
0#
#345
1#
#347
b1010 !
b1010 -
b1 '
b1 /
b0 "
b0 ,
b0 &
b0 .
b0 *
#350
0#
#352
b11110 !
b11110 -
b11 '
b11 /
b10100 "
b10100 ,
b10 &
b10 .
b10 *
#355
1#
#357
b110010 !
b110010 -
b101 '
b101 /
b101000 "
b101000 ,
b100 &
b100 .
b100 *
#360
0#
#362
b1000110 !
b1000110 -
b111 '
b111 /
b111100 "
b111100 ,
b110 &
b110 .
b110 *
#365
1#
#367
b1011010 !
b1011010 -
b1001 '
b1001 /
b1010000 "
b1010000 ,
b1000 &
b1000 .
b1000 *
#370
0#
#372
b1101110 !
b1101110 -
b1011 '
b1011 /
b1100100 "
b1100100 ,
b1010 &
b1010 .
b1010 *
#375
1#
#377
b10000010 !
b10000010 -
b1101 '
b1101 /
b1111000 "
b1111000 ,
b1100 &
b1100 .
b1100 *
#380
0#
#382
b10010110 !
b10010110 -
b1111 '
b1111 /
b10001100 "
b10001100 ,
b1110 &
b1110 .
b1110 *
#385
1#
#387
b10101010 !
b10101010 -
b10001 '
b10001 /
b10100000 "
b10100000 ,
b10000 &
b10000 .
b10000 *
#390
0#
#392
b10111110 !
b10111110 -
b10011 '
b10011 /
b10110100 "
b10110100 ,
b10010 &
b10010 .
b10010 *
#395
1#
#397
b11010010 !
b11010010 -
b10101 '
b10101 /
b11001000 "
b11001000 ,
b10100 &
b10100 .
b10100 *
#400
0#
#402
b11100110 !
b11100110 -
b10111 '
b10111 /
b11011100 "
b11011100 ,
b10110 &
b10110 .
b10110 *
#405
1#
#407
b11111010 !
b11111010 -
b11001 '
b11001 /
b11110000 "
b11110000 ,
b11000 &
b11000 .
b11000 *
#410
0#
#412
b100001110 !
b100001110 -
b11011 '
b11011 /
b100000100 "
b100000100 ,
b11010 &
b11010 .
b11010 *
#415
1#
#417
b100100010 !
b100100010 -
b11101 '
b11101 /
b100011000 "
b100011000 ,
b11100 &
b11100 .
b11100 *
#420
0#
#422
b100110110 !
b100110110 -
b11111 '
b11111 /
b100101100 "
b100101100 ,
b11110 &
b11110 .
b11110 *
#425
1#
#427
b100000 *
#430
0#
#435
1#
#437
